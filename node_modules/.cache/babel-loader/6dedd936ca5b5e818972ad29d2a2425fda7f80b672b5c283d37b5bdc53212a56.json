{"ast":null,"code":"// 简单封装axios\nimport axios from \"axios\";\nconst http = axios.create({\n  baseURL: 'http://conde.js.org/api/v1',\n  timeout: 3000\n});\n// 配置拦截器\n\n// 请求拦截器\n// 需要在请求头中添加token字段，该项目暂时不需要\n\nhttp.interceptors.request.use(config => {\n  // const token = window.localStorage.getItem('token')\n  // if (token) config.authToken = token\n  return config;\n});\n// 相应拦截器\nhttp.interceptors.response.use(res => {\n  return res.data;\n});\nexport default http;","map":{"version":3,"names":["axios","http","create","baseURL","timeout","interceptors","request","use","config","response","res","data"],"sources":["D:/上课作业/shangke/cnodevue/src/http/http.js"],"sourcesContent":["// 简单封装axios\r\nimport axios from \"axios\";\r\nconst http = axios.create({\r\n    baseURL: 'http://conde.js.org/api/v1',\r\n    timeout: 3000\r\n})\r\n// 配置拦截器\r\n\r\n// 请求拦截器\r\n// 需要在请求头中添加token字段，该项目暂时不需要\r\n\r\nhttp.interceptors.request.use(config => {\r\n    // const token = window.localStorage.getItem('token')\r\n    // if (token) config.authToken = token\r\n    return config\r\n\r\n})\r\n// 相应拦截器\r\nhttp.interceptors.response.use(res=>{return res.data})\r\n\r\nexport default http"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACtBC,OAAO,EAAE,4BAA4B;EACrCC,OAAO,EAAE;AACb,CAAC,CAAC;AACF;;AAEA;AACA;;AAEAH,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACpC;EACA;EACA,OAAOA,MAAM;AAEjB,CAAC,CAAC;AACF;AACAP,IAAI,CAACI,YAAY,CAACI,QAAQ,CAACF,GAAG,CAACG,GAAG,IAAE;EAAC,OAAOA,GAAG,CAACC,IAAI;AAAA,CAAC,CAAC;AAEtD,eAAeV,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}